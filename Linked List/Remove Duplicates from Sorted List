Problem Description : https://leetcode.com/problems/remove-duplicates-from-sorted-list/


Iterative Approach

Time Complexity : O(N)
Space Complexity : O(1)

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL)return NULL;
        ListNode *temp = head;
        while(temp->next != NULL){
        if(temp->val == temp->next->val){
            ListNode* del = temp->next;
            temp->next = del->next;
            delete del;
        }
        else{
            temp = temp->next;
        }
    }
        return head;
  }
};

Recursive Approach 

Time Complexity : O(N)
Space Complexity : O(N)

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL || head->next == NULL)return head;
        ListNode *newHead = deleteDuplicates(head->next);
        if(head->val == newHead->val){
            return newHead;
        }
        else{
            head->next = newHead;
            return head;
        }
        
  }
};

