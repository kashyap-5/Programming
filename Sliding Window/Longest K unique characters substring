Problem Description : Given a string you need to print the size of the longest possible substring that has exactly K unique characters. If there is no possible substring then print -1.

link : https://practice.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1

class Solution{
  public:
    int longestKSubstr(string s, int k) {
    // your code here
    unordered_map<char,int> mp;
    int mx = -1;
    int n= s.size();
    int i = 0, j = 0;
    while(j < n){
        mp[s[j]]++;
        if(mp.size() < k)j++;
        else if(mp.size() == k){
            if(j-i+1 > mx)mx = j-i+1;
            j++;
        }
        else if(mp.size() > k){
            while(mp.size() > k){
                if(mp[s[i]] > 1)mp[s[i]]--;
                else{
                    
                    mp.erase(s[i]);
                }
                i++;
            }
            j++;
        }
    }
    return mx;
    }
};
